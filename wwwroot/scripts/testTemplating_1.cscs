counter = 1;

CreateEndpoint("GET", "/", "getHandler1");

function getHandler1(reqArgs){

        method = reqArgs[0]; // HTTP method -> string
        requestPath = reqArgs[1]; // request path(route) -> string
        routeParams = reqArgs[2]; // Route parameters -> hash table / dictionary
        queryParams = reqArgs[3]; // Query string -> string
        headers = reqArgs[4]; // Request headers -> hash table / dictionary
        body = reqArgs[5]; // Request body -> string


        // print("\n-- reqArgs --------------\n");
        // argsString = "method:\n" + method + "\n" +
        //             "requestPath:\n" + requestPath + "\n" +
        //             "routeParams:\n" + routeParams + "\n" +
        //             "queryParams:\n" + queryParams + "\n" +
        //             "headers:\n" + headers + "\n" +
        //             "body:\n" + body;
        // print(argsString);
        // print("----------------------\n");  

    //----------------------------------------------

    htmlHndl = LoadHtmlTemplate("C:\\Users\\User\\Documents\\GitHub\\CSCS_Web_Enzo_1\\CSCS-web-1\\wwwroot\\templates\\template1.html");
    if(htmlHndl < 1){
        return "Server error occured.\nTry again later.";
    }

    // print("--- htmlHndl INTEGER ------------------------------------------");
    // print("htmlHndl = " + htmlHndl);
    // print("");







    // if(!FillTemplatePlaceholder(htmlHndl, "placeholder1", "novi TEKSTTTTTT za \"placeholder1\""))
    // {
    //     print("{{placeholder1}} not found in template.");
    // }
    // else{
    //     print("{{placeholder1}} FOUND in template.");
    // }
    


    // if(!FillTemplatePlaceholder(htmlHndl, "title", "KNJIGE"))
    // {
    //     print("{{title}} not found in template.");
    // }
    // else{
    //     print("{{title}} FOUND in template.");
    // }



    
    
    // if(!FillTemplatePlaceholder(htmlHndl, "companyName", "AuRaSoft d.O.o."))
    // {
    //     print("{{companyname}} not found in template.");
    // }
    // else{
    //     print("{{companyname}} FOUND in template.");
    // }






    try{
        FillTemplatePlaceholder(htmlHndl, "title", "Poslovne knjige ASCONTO");
        
    }catch(ex){
        print("Error while filling template placeholders: " + ex);

        return "Server error occured.\nTry again later.";
    }

    try{
        
        FillTemplatePlaceholder(htmlHndl, "companyName", "AuRaSoft d.O.o.");
    }catch(ex){
        print("Error while filling template placeholders: " + ex);

        return "Server error occured.\nTry again later.";
    }
























    




///-----------------------------------
///-----------------------------------
///-----------------------------------
///-----------------------------------

    
    

    
    // print("----------------------------------1");
    

    valuesDictionary = {};



    valuesDictionary["title"] = "ASConto - Poslovne Knjige (WEB verzija)";
    valuesDictionary["companyName"] = "Aura Soft d.o.o.";
    valuesDictionary["companyAddress"] = "Kapetana Lazarića 1d, 52000 Pazin";

    // print("----------------------------------2");

    valuesDictionary["bodyParagraphText"] = 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n" + 
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.";

    

// print("----------------------------------3");

    valuesDictionary["div1Class"] = Math.Round(((counter + (Math.Random() * 100))) % 2 == 0 ? "divGreen" : "divGray");
    valuesDictionary["div2Class"] = Math.Round(((counter + (Math.Random() * 100))) % 2 == 0 ? "divGreen" : "divGray");
    valuesDictionary["div3Class"] = Math.Round(((counter + (Math.Random() * 100))) % 2 == 0 ? "divGreen" : "divGray");
    valuesDictionary["div4Class"] = Math.Round(((counter + (Math.Random() * 100))) % 2 == 0 ? "divGreen" : "divGray");
    valuesDictionary["div5Class"] = Math.Round(((counter + (Math.Random() * 100))) % 2 == 0 ? "divGreen" : "divGray");
    valuesDictionary["div6Class"] = Math.Round(((counter + (Math.Random() * 100))) % 2 == 0 ? "divGreen" : "divGray");

    
    // print("----------------------------------4");
    


    //// PARTIAL html from SCRIPT
    

    orderedListString = "<ol>\n";
    for(i = 0; i < 25; i++){
        orderedListString += "\t<li>Item " + i + "</li>\n";
    }
    orderedListString += "<ol>\n<br/><br/>\n";

    if(counter % 2 == 0){
        orderedListString += "\t<button>Klikni me</button>";
    }
    if(counter % 2 == 1){
        orderedListString += "\t<image src=\"https://aurasoft.hr/images/AuraSoftLogoBlue.png\" alt=\"Aurasoft logo\" />";
    }

    valuesDictionary["orderedListPlaceholder"] = orderedListString;




    // --- JS script at the botom ------------------------------------------

    valuesDictionary["bodyEndJavascript1"] = "alert(\"Hello World!\");";
    valuesDictionary["bodyEndJavascript2"] = ReadFile("C:\\Users\\User\\Documents\\GitHub\\CSCS_Web_Enzo_1\\CSCS-web-1\\wwwroot\\js\\site.js");";



    FillTemplateFromDictionary(hndlVar, valuesDictionary);



///-----------------------------------
///-----------------------------------


        // // // // IF --------------

        // RenderCondition(htmlHndl, "IfId2", counter % 2 == 1);
        // valuesDictionary["nesto1"] = "\"NEŠTO1\"" + "<br/><br/>" + "<b>\"NEŠTO1\"</b>" + "<br/><br/>" + "<i>\"NEŠTO1\"</i>";
        // valuesDictionary["nesto2"] = "\"NEŠTO2\"" + "<br/><br/>" + "<b>\"NEŠTO2\"</b>" + "<br/><br/>" + "<i>\"NEŠTO2\"</i>";
        // valuesDictionary["nesto3"] = "\"NEŠTO3\"" + "<br/><br/>" + "<b>\"NEŠTO3\"</b>" + "<br/><br/>" + "<i>\"NEŠTO3\"</i>";


        // //// BOLJA VARIJANTA -> proslijedit rezultat arg3-a u return
        // // if(RenderCondition(htmlHndl, "listaId", false)){
        // if(RenderCondition(htmlHndl, "listaId", true)){
        //     valuesDictionary["nesto1"] = "\"NEŠTO1\"" + "<br/><br/>" + "<b>\"NEŠTO1\"</b>" + "<br/><br/>" + "<i>\"NEŠTO1\"</i>";
        //     valuesDictionary["nesto2"] = "\"NEŠTO2\"" + "<br/><br/>" + "<b>\"NEŠTO2\"</b>" + "<br/><br/>" + "<i>\"NEŠTO2\"</i>";
        //     valuesDictionary["nesto3"] = "\"NEŠTO3\"" + "<br/><br/>" + "<b>\"NEŠTO3\"</b>" + "<br/><br/>" + "<i>\"NEŠTO3\"</i>";
        // }

    
    ///-----------------------------------
    ///-----------------------------------



    try{
        finalHtmlString = RenderHtml(htmlHndl);

        // print("--- finalHtmlString STRING ------------------------------------------");
        // print( finalHtmlString);
        // print("");

        return finalHtmlString;
    }catch(ex){
        print("Error while rendering html: " + ex); // nama(u server console(ili log također))
        return "Server error occured.\nTry again later."; // klijentu
    } 
}




// function shouldIDisplayThatSection(){
//     return (Math.Round(((counter + (Math.Random() * 100))) % 2 == 0));
// }