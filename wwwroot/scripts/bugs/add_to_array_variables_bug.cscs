parts = {};

sqlResults = sqlQuery(query);


// this works
if(sqlResults != null && Size(sqlResults) > 1){
    for(i = 1; i < Size(sqlResults); i++){
        pCode = strTrim(sqlResults[i][0]);
        pName = strTrim(sqlResults[i][1]);
        pCity = strTrim(sqlResults[i][2]);

        line = {
            "partCode" : pCode,
            "PartName" : pName,
            "PartCity" : pCity
        };
        
        parts.Add(line);
    }
}


// this should work, but it doesn't. It is more convenient and simple to write. What do you think?
if(sqlResults != null && Size(sqlResults) > 1){
    for(i = 1; i < Size(sqlResults); i++){
        
        line = {
            "partCode" : strTrim(sqlResults[i][0]),
            "PartName" : strTrim(sqlResults[i][1]),
            "PartCity" : strTrim(sqlResults[i][2])
        };

        parts.Add(line);
    }
}

//this also doesn't work, but it is more convenient and simple to write. What do you think?
parts.add(
    {
        "partCode" : strTrim(sqlResults[i][0]),
        "PartName" : strTrim(sqlResults[i][1]),
        "PartCity" : strTrim(sqlResults[i][2])
    }
); 



// ternary examples
if(1 < 2){
    string1 = "početak " + " i između " + " ostatak";
} else {
    string1 = "početak " + (1 < 2 ? " i između " : "akfgasdf") + " ostatak";
}

string1 = "početak " + (1 < 2 ? " i između " : "akfgasdf") + " ostatak";



var2 = true ? ( false ?  3 : 4 ) : 2;